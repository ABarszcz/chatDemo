<!DOCTYPE html>
<html>
<head>
    <title><%= title %></title>
    <link rel="stylesheet" href="/stylesheets/bootstrap.min.css" />
    <link rel="stylesheet" href="/stylesheets/bootstrap-theme.min.css" />
    <link rel="stylesheet" href="/stylesheets/style.css" />
</head>
<body>
  <main class="container">

    <h1><%= title %></h1>
    <!-- Create message area -->
    <ul id="messages-area"></ul>
    <!-- Create form for input and submit button -->
    <form id="form" onsubmit="return false;">
      <input id="new-message" type="text" /><button onclick="sendFunction()">Send</button>
    </form>

  </main>

<!-- Create a footer -->
<footer class="navbar-inverse">
    <p class="text-center text-info">&copy; 2016 Anthony Barszcz, Takaki Goto, David King, Kayla Wiest | COMP2068 Advanced Web | Chat Room Demo</p>
</footer>

<!-- JavaScript -->
<script src="https://cdn.socket.io/socket.io-1.2.0.js"></script>
<script src="http://code.jquery.com/jquery-1.11.1.js"></script>

<!-- Socket.io functions -->
<script>
    //define socket.io
    var socket = io();

    //this function runs when the send button is clicked.
    function sendFunction() {
        socket.emit('new message', $('#new-message').val()); //emits a message caught by app.js
        $('#new-message').val('');
    }

    //listens for 'chat message' in socket.io
    socket.on('chat message', function(msg) {
        $('#messages-area').append($('<li>').text(msg));
    });

    //listens for 'conn' in socket.io and appends a 'user connected' message when it is heard
    socket.on('conn', function() {
        $('#messages-area').append($('<li>').text('a user connected'));
    });

    //listens for 'disconn' in socket.io and appends 'a user disconnected' message when it is heard
    socket.on('disconn', function() {
        $('#messages-area').append($('<li>').text('a user disconnected'));
    });

    /* Show when a user is typing */

    var typing = false;
    var timeout = undefined;

    //function that runs when the timeout occurs
    function timeoutFunction() {
        typing = false;
        socket.emit('no longer typing');
    }

    //function that runs when a key is pressed
    function onKeyDownNotEnter() {
        if(typing == false) {
            typing = true
            //sends that the user is typing
            socket.emit('typing');
            //after a certain amount of time, run the timeout function
            timeout = setTimeout(timeoutFunction, 5000);
        //runs if the user is still typing
        } else {
            clearTimeout(timeout);
            timeout = setTimeout(timeoutFunction, 5000);
        }
    }

    //listens for the typing message
    socket.on('typing', function() {
        //TODO make a label that says typing visible?
    });

    //listens for the no longer typing message
    socket.on('no longer typing', function() {
        //TODO hide the label that says typing?
    });
</script>
</body>
</html>